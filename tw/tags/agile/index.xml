<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>agile on YK.horizon</title>
    <link>https://ykhorzon.github.io/tw/tags/agile/</link>
    <description>Recent content in agile on YK.horizon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 May 2019 22:36:09 +0800</lastBuildDate>
    
	<atom:link href="https://ykhorzon.github.io/tw/tags/agile/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Agile Summit 2019 Day1 - 敏捷心體技</title>
      <link>https://ykhorzon.github.io/tw/2019/05/agile-summit-2019-day1-%E6%95%8F%E6%8D%B7%E5%BF%83%E9%AB%94%E6%8A%80/</link>
      <pubDate>Thu, 16 May 2019 22:36:09 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/2019/05/agile-summit-2019-day1-%E6%95%8F%E6%8D%B7%E5%BF%83%E9%AB%94%E6%8A%80/</guid>
      <description>&lt;h2 id=&#34;myths-and-patterns-of-organizational-change-linda-rising&#34;&gt;Myths and Patterns of Organizational Change - Linda Rising&lt;/h2&gt;

&lt;p&gt;現場聆聽 Linda rising 的演講後，真正感受到大師的說故事功力，語調沉穩堅定，內容句句切入基本功，淺顯易懂說明了 Agile mindset 的核心觀念與輔助觀念。&lt;/p&gt;

&lt;p&gt;1.Agile mindset(我自己認為是 agile 核心的精神，最容易可以向人說明的方式)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;just do it&lt;/li&gt;
&lt;li&gt;small success&lt;/li&gt;
&lt;li&gt;Baby step&lt;/li&gt;
&lt;li&gt;time to reflection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2.Story over facts&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;你一定遇過一種人，他/她跟你說話【只會】實事求是，說數據講道理，常常讓你聽不下去，覺得很難溝通，但總是說不出問題出在哪裡。Linda 提醒我們【發揮引響力需要先與人建立連結】，而故事就是你與對方連結(connection)一種很好的方式。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>一場深度跨領域交流的探險 — Agile Tour Taipei 2018 心得(下)</title>
      <link>https://ykhorzon.github.io/tw/2018/12/%E4%B8%80%E5%A0%B4%E6%B7%B1%E5%BA%A6%E8%B7%A8%E9%A0%98%E5%9F%9F%E4%BA%A4%E6%B5%81%E7%9A%84%E6%8E%A2%E9%9A%AA-agile-tour-taipei-2018-%E5%BF%83%E5%BE%97%E4%B8%8B/</link>
      <pubDate>Sun, 02 Dec 2018 00:17:44 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/2018/12/%E4%B8%80%E5%A0%B4%E6%B7%B1%E5%BA%A6%E8%B7%A8%E9%A0%98%E5%9F%9F%E4%BA%A4%E6%B5%81%E7%9A%84%E6%8E%A2%E9%9A%AA-agile-tour-taipei-2018-%E5%BF%83%E5%BE%97%E4%B8%8B/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://ykhorzon.github.io/content_img/agile/agile_taipei_tour_2018_review/impact_mapping_results.jpg&#34;&gt;
Workshop 最後產出的 impact mapping 結果，大家都很有創意！&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;br&gt;
延續上一集，我繼續回顧 Agile Tour Taipei 下午場的內容，分成 Workshop 和 Open Space Tech. 開放討論。Workshop 可以快速打造一種團隊戰友的氛圍，讓全體焦點轉向『做好團隊任務』，同時可以觀察隊友的行為與背後思考，偷學別人兩招的地方；至於 Open Space Tech.，活動設計本身就是 &lt;strong&gt;『一種討論框架』&lt;/strong&gt;，促使參與者更自然產生化學作用，討論與對話遍地開花，不必擔心沒話題。不時還會出校有趣的議題，例如笑生不停地的 &lt;strong&gt;『有個 water-fall 老婆怎麼辦？』&lt;/strong&gt;（笑）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一場深度跨領域交流的探險 — Agile Tour Taipei 2018 心得(上)</title>
      <link>https://ykhorzon.github.io/tw/2018/12/%E4%B8%80%E5%A0%B4%E6%B7%B1%E5%BA%A6%E8%B7%A8%E9%A0%98%E5%9F%9F%E4%BA%A4%E6%B5%81%E7%9A%84%E6%8E%A2%E9%9A%AA-agile-tour-taipei-2018-%E5%BF%83%E5%BE%97%E4%B8%8A/</link>
      <pubDate>Sat, 01 Dec 2018 22:54:04 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/2018/12/%E4%B8%80%E5%A0%B4%E6%B7%B1%E5%BA%A6%E8%B7%A8%E9%A0%98%E5%9F%9F%E4%BA%A4%E6%B5%81%E7%9A%84%E6%8E%A2%E9%9A%AA-agile-tour-taipei-2018-%E5%BF%83%E5%BE%97%E4%B8%8A/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://ykhorzon.github.io/content_img/agile/agile_taipei_tour_2018_review/group.jpg&#34;&gt;
每年 Agile Tour 必備大合照XD, photo source: &lt;a href=&#34;https://www.facebook.com/AgileTourTaipei/photos/bc.Abr2llnQRzNzZB4TL_0CpNLsq9DxiIt-9rAK21dZ6tkESvCNk8fdRjHIGX6T8JknvPftMNpvVvfz_dLp3ZnHS1zcs80WeGSODd96OwHjs1n4TaD2cDKmvi6uQDIbtVumh1VGUcCamVkijmFuIcNqa8cOI9lj623f7DWFgOIofyU9U_KGznCbSorxhrczVKu3lhCKb7VRwZ5h3OX-f-7nmcZHHMFWAj3i0RHIw2PcTG9C9srkzaeD-ULMy7p7zR2r54AEg0TI6ID7bHIbBMrtxUsxGBUbwzqQaNOxHCSqbqwg1A/884362115104514/?type=1&amp;amp;opaqueCursor=Abpb5d9dsGRfb77CH0B1YWqMQpZ1433HdcR1nzVbH6lPFcBfo8b5R-082Ob5tNuMvHogMb_BwbsGQDUQ6grBFlQtov1MAwfhl9-DLoJIb0DwnyWHZciDf8dxiKxaPSWUn4d0c3y6wt_IAGlRsAoD1WyVZ-zhpAeiWl2r_60yeDisa2L9I-dtOX7bV0C8kXx1iZjCTiRjAUmvloQ60YIDIxfhf5Tmur2sfY7CnAhr4QRCYTQR8pAkkFyKOU5TJSkCzRO93d6TN9cn6AJnU4qz2Xqq3tPfom8aW802CGt9EU-7BHEn0kBpgi81MIMmhbonhNrVGwWKEkp90Wrk1T67Mh47pYOhSV6Kum_nqLB1z8wjU188SjHQqxzZj_psrWLcfgHUgeFBz3smpGDMqERfgOFcMT1r7ktKQe49eEO4x2OzCFdmiSlCSJ-Sa-hrXbOz0pqsI0lYIkpwVKbxivvRG8i9urL6V1zkma8TUt18QOTw2CKo7qx-XkD9mhRaMwHCxzQlMsjGkWaeOD-6VvcLBYza&amp;amp;theater&#34;&gt;FB photo from alige community&lt;/a&gt;
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;探險&#34;&gt;探險&lt;/h2&gt;

&lt;p&gt;今年是第一次搶到票，參加 Agile Tour Taipei 盛會，會說是『一場深度跨領域交流的探險』來自於A,B,C Track 分別是探討的issue是 Product、Dev/Test、UX，可說是三個願望一次滿足，讓我的選擇困難症完全發作，好想同時聽三軌呀呀。同時，一次匯聚三種群體到一場研討會中，更能激發豐富的討論，探索不同觀點的價值，讓對話能夠突破各自熟悉的同溫層，說是一場探險一點也不為過！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>從『讓李小龍你看見 Kanban 的美好』到改進我的 Personal Kanban - Part I kanban 觀念釐清</title>
      <link>https://ykhorzon.github.io/tw/2018/08/%E5%BE%9E%E8%AE%93%E6%9D%8E%E5%B0%8F%E9%BE%8D%E4%BD%A0%E7%9C%8B%E8%A6%8B-kanban-%E7%9A%84%E7%BE%8E%E5%A5%BD%E5%88%B0%E6%94%B9%E9%80%B2%E6%88%91%E7%9A%84-personal-kanban-part-i-kanban-%E8%A7%80%E5%BF%B5%E9%87%90%E6%B8%85/</link>
      <pubDate>Sat, 18 Aug 2018 17:46:11 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/2018/08/%E5%BE%9E%E8%AE%93%E6%9D%8E%E5%B0%8F%E9%BE%8D%E4%BD%A0%E7%9C%8B%E8%A6%8B-kanban-%E7%9A%84%E7%BE%8E%E5%A5%BD%E5%88%B0%E6%94%B9%E9%80%B2%E6%88%91%E7%9A%84-personal-kanban-part-i-kanban-%E8%A7%80%E5%BF%B5%E9%87%90%E6%B8%85/</guid>
      <description>&lt;h1 id=&#34;文章要點&#34;&gt;文章要點&lt;/h1&gt;

&lt;p&gt;文章主要分成&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;第一篇 Part I 是『讓李小龍你看見 Kanban 的美好』的統整和心得，參雜一些個人的解釋&lt;/li&gt;
&lt;li&gt;第二篇 Part II 則是我嘗試使用學習到的kanban觀念，改進我的『個人看板』（尚未完成）&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;kanban-簡介&#34;&gt;Kanban 簡介&lt;/h1&gt;

&lt;p&gt;如果你上網搜尋 Kanban 可能會出現，兩種最常見的解釋，其一是&lt;a href=&#34;https://en.wikipedia.org/wiki/Kanban&#34;&gt;豐田生產模式的 kanban&lt;/a&gt; ，發明人為&lt;a href=&#34;https://en.wikipedia.org/wiki/Taiichi_Ohno&#34;&gt;大野耐一&lt;/a&gt;，致力於工廠生產效率改善；其二為應用於&lt;a href=&#34;https://en.wikipedia.org/wiki/Kanban_(development)&#34;&gt;軟體流程開發的 Kanban (Development)&lt;/a&gt;，此方法著名得提倡者 &lt;a href=&#34;https://www.linkedin.com/in/agilemanagement/&#34;&gt;David J. Anderson&lt;/a&gt;，他是微軟導入 kanban 方法等敏捷方法的先驅，解救微軟績效不佳的支援部門，設法尋找一套方法讓部門問題自然浮現；早期著名著作有 &lt;a href=&#34;https://www.amazon.com/Kanban-Successful-Evolutionary-Technology-Business/dp/0984521402&#34;&gt;Kanban: Successful Evolutionary Change for Your Technology Business&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DevOps 全棧工程師-活動心得</title>
      <link>https://ykhorzon.github.io/tw/2017/08/devops-%E5%85%A8%E6%A3%A7%E5%B7%A5%E7%A8%8B%E5%B8%AB-%E6%B4%BB%E5%8B%95%E5%BF%83%E5%BE%97/</link>
      <pubDate>Wed, 02 Aug 2017 12:41:57 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/2017/08/devops-%E5%85%A8%E6%A3%A7%E5%B7%A5%E7%A8%8B%E5%B8%AB-%E6%B4%BB%E5%8B%95%E5%BF%83%E5%BE%97/</guid>
      <description>Speaker:
 odd-e 柴叔(柴鋒)  (P.S. 本文演講消化後心得，加入部分我自己觀點)
歷史脈絡 開發、維運，分分合合 柴叔從開發歷史的脈絡娓娓道來，從服務或應用簡單的年代，開發（Development)與維運(Operation)可以一起包辦，但隨著複雜度的提高，逐漸將開發（Development) 與維運(Operation)獨立成兩個團隊。久而久之，雙方的溝通本成增加，合作程度低下，最終造成總體效能下降(開發與測試的關聯，但這邊不詳細敘述)。人們開始思考需要一個穿針引線的角色，他/她需打通開發與維運流程，增進溝通效率，共同協作完成任務，目前當紅的 DevOps的一種解釋。
你以為過去沒有 DevOps? 在遠古開發時代(?)，沒有 Docker 或 Ansible 這類工具。但別忘了其實底層絕大多數的工作，都可以用 shell script 完成，可見 shell script 這類基本功有多重要。時代在改變，但要完成的工作並沒有改變，大多是變複雜，解決問題的觀念類似。
再者，microservice 這類型的觀念，其實也早在 Unix 哲學(Unix philosophy)中被提及，差異是在不同系統層級實作( Do One Thing and Do It Well. 可以對照到 microservice)，當代有更方便工具，抽象化細節與簡化操作流程。
框架工具之於觀念
 工具只是溝通工具，而不是溝通的本身 舉例：Jenkins只是CI的工具，CI的關鍵是CI觀念本身，不管用任何方式達成都好
 框架工具之於基本功
 框架不會幫你解決產品的問題，幾乎與你的產品無關 基礎不紮實，只花時間在學習框架或工具，遭遇的狀況牽扯底層或基本面，也是無法處理
 舉例：Java 工程師 v.s Ops 維運工程師 上圖比較 Java 工程師與 Ops 工程師的技能對照，一目了然自己缺少哪個技能。一般前段或後端工程師的 skill set 從 bottom-up 到 top-down 大家都很清楚，但提到 DevOps 大家似乎被 Top-down 工具給迷惑住了！這算是一張check list，提醒自己是否還缺少哪個部分。</description>
    </item>
    
    <item>
      <title>User Story 的那些人與那些事</title>
      <link>https://ykhorzon.github.io/tw/2017/05/user-story-%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%BA%E8%88%87%E9%82%A3%E4%BA%9B%E4%BA%8B/</link>
      <pubDate>Wed, 03 May 2017 10:32:13 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/2017/05/user-story-%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%BA%E8%88%87%E9%82%A3%E4%BA%9B%E4%BA%8B/</guid>
      <description>&lt;p&gt;&lt;img style=&#34;width:700px;&#34; src=&#34;https://ykhorzon.github.io/content_img/user_story_and_others/story.jpg&#34;&gt;&lt;/p&gt;

&lt;h1 id=&#34;序言&#34;&gt;序言&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;User Story 不只是一張卡片，是說故事與溝通需求的載體&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;從這篇文章得到&#34;&gt;從這篇文章得到&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;此篇是 User Story 實戰篇的階議題&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;心得&#34;&gt;心得&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;有使用過 User Story 經驗的人，能夠討論出真實問題，彼此切磋，討論氣氛活絡 (有一點像是 Planning Poker 分享大會)&lt;/li&gt;
&lt;li&gt;Alway observe and find bottleneck in team ( or system or problem )&lt;/li&gt;
&lt;li&gt;經常思考事情的dependency與前置準備，在真正要動工的時候，把需要的資源都在手上&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;what-is-user-story&#34;&gt;What is User Story ?&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;User stories are short, simple descriptions of a feature told from the perspective of the person who desires the new capability,&amp;gt; usually a user or customer of the system.&lt;/p&gt;

&lt;p&gt;from Mountain Goat Software&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;另一個定義&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A user story is a tool used in Agile software development to capture a description of a software feature from an end-user perspective. The user story describes the type of user, what they want and why. A user story helps to create a simplified description of a requirement.&lt;/p&gt;

&lt;p&gt;from TechTarget&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;https://www.mountaingoatsoftware.com/agile/user-stories&#34;&gt;Mountain Goat Software, User Stories&lt;/a&gt;
&lt;a href=&#34;http://searchsoftwarequality.techtarget.com/definition/user-story&#34;&gt;TechTarget, User Story&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;簡短需求小卡( Card )&lt;/li&gt;
&lt;li&gt;交談 ( Conversation )&lt;/li&gt;
&lt;li&gt;確認 ( Confirmation )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;特性&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;作為基底、high level&lt;/li&gt;
&lt;li&gt;注重在價值&lt;/li&gt;
&lt;li&gt;不要 &lt;em&gt;帶入 Spec.&lt;/em&gt; 或 &lt;em&gt;過多功能描述&lt;/em&gt; 在其中 (會限制 Solution的可能性)&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>敏捷需求探索工作坊</title>
      <link>https://ykhorzon.github.io/tw/2017/02/%E6%95%8F%E6%8D%B7%E9%9C%80%E6%B1%82%E6%8E%A2%E7%B4%A2%E5%B7%A5%E4%BD%9C%E5%9D%8A/</link>
      <pubDate>Sun, 26 Feb 2017 23:35:22 +0000</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/2017/02/%E6%95%8F%E6%8D%B7%E9%9C%80%E6%B1%82%E6%8E%A2%E7%B4%A2%E5%B7%A5%E4%BD%9C%E5%9D%8A/</guid>
      <description>&lt;p&gt;&lt;img style=&#34;width:700px;&#34; src=&#34;https://ykhorzon.github.io/content_img/agile_requirements_discovery/discovery.jpg&#34;&gt;&lt;/p&gt;

&lt;h1 id=&#34;序言&#34;&gt;序言&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;找到缺少的拼圖就是Impact Mapping&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;你將可以從這篇文章得到&#34;&gt;你將可以從這篇文章得到&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;開發產品簡易全貌 (著重需求探索)&lt;/li&gt;
&lt;li&gt;影響地圖 Impact Mapping 概念與操作&lt;/li&gt;
&lt;li&gt;探訪基礎&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;敏捷概述&#34;&gt;敏捷概述&lt;/h1&gt;

&lt;p&gt;敏捷開發的精神，可以由最就代表性 &lt;strong&gt;&amp;ldquo;敏捷宣言&amp;rdquo;&lt;/strong&gt; 說起，原文如下：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We are uncovering better ways of developing
software by doing it and helping others do it.
Through this work we have come to value:&lt;/p&gt;

&lt;p&gt;Individuals and interactions over processes and tools
Working software over comprehensive documentation
Customer collaboration over contract negotiation
Responding to change over following a plan&lt;/p&gt;

&lt;p&gt;That is, while there is value in the items on
the right, we value the items on the left more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Source: &lt;a href=&#34;http://agilemanifesto.org/&#34;&gt;Manifesto for Agile Software Development&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;核心精神：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;自主管理&lt;/li&gt;
&lt;li&gt;持續改進&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我自己的理解是：
以人的出發思考，每個人願意發表想法、當面溝通比起工具、方法論，更能深入問題的根本(因為軟體是人在開發)
軟體是我們打造的產品，產品本身品質(可讀性、可測試性)，可以更根本解決問題，因為維護文件也是成本&lt;/p&gt;

&lt;p&gt;回歸人的本質，客戶也是人，溝通合作，取得共識，取得雙贏。最為合作底謝的合約白紙黑字必須要有，
但互相合作更為愉快。(有點類似道德和法律的感覺)
最後，接受現實，計畫永遠敢不上變化，用開放的態度適時做出調整。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>COSCUP Startup Culture Buliding Talk</title>
      <link>https://ykhorzon.github.io/tw/2016/09/coscup-startup-culture-buliding-talk/</link>
      <pubDate>Mon, 12 Sep 2016 20:09:59 +0000</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/2016/09/coscup-startup-culture-buliding-talk/</guid>
      <description> 關鍵因素  人 環境(core) 文化(core) 方法 工具  How to Open?
工廠 vs 創意  product-driven customer-driven
 敏捷的文化
 增進彼此之間的溝通
 多一點『引導』，少一點『管理』
 用團隊取代英雄
   管理：高階領導必須要思考是『如何在讓每一個人在環境中發揮實力』
 常見的方式 - scrum - kanban - water-fall
PM 為溝通的角色
溝通  應用對方可以理解的話語，把訊息傳達進去 如何建立人與人的連結？ 持之以行的舉辦  讓彼此知道彼此   如何提升資訊透明度 目標清楚
 過程 成果; 成果狀態(白板) ，即是 kanban  自動化測試使工作有效
 Jenkins  </description>
    </item>
    
  </channel>
</rss>