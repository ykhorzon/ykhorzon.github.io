<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://ykhorzon.github.io/tw/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>tw</language>
    <managingEditor>ykhorizon@gmail.com (ykhorizon)</managingEditor>
    <webMaster>ykhorizon@gmail.com (ykhorizon)</webMaster>
    <copyright>(c) 2017 ykhorizon</copyright>
    <lastBuildDate>Wed, 30 Aug 2017 12:36:50 +0800</lastBuildDate>
    
	<atom:link href="https://ykhorzon.github.io/tw/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Adapt or Die，所以你說 retrospective 怎麼辦？</title>
      <link>https://ykhorzon.github.io/tw/agile/adapt_or_die_how_to_retrospective/</link>
      <pubDate>Wed, 30 Aug 2017 12:36:50 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/agile/adapt_or_die_how_to_retrospective/</guid>
      <description>講者介紹 講者為，有興趣請參考他的 [blog]()，活動由 [agile] 因講者在 Taiwan DevOps Day 2017還有一場研講，基於不暴雷原則，部分內容以簡化。
Too busy to improve? image source &amp;gt; Restrospective 翻成中文是回顧反省</description>
    </item>
    
    <item>
      <title>Adapt or Die，所以你說 retrospective 怎麼辦？</title>
      <link>https://ykhorzon.github.io/tw/content_as_toml/content/agile/adapt_or_die_how_to_retrospective/</link>
      <pubDate>Wed, 30 Aug 2017 12:36:50 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/content_as_toml/content/agile/adapt_or_die_how_to_retrospective/</guid>
      <description>講者介紹 講者為，有興趣請參考他的 [blog]()，活動由 [agile] 因講者在 Taiwan DevOps Day 2017還有一場研講，基於不暴雷原則，部分內容以簡化。
Too busy to improve? image source &amp;gt; Restrospective 翻成中文是回顧反省</description>
    </item>
    
    <item>
      <title>Google analytics 設定快速檢查</title>
      <link>https://ykhorzon.github.io/tw/computer/web/google_analytics_setup/</link>
      <pubDate>Wed, 16 Aug 2017 22:29:08 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/computer/web/google_analytics_setup/</guid>
      <description>設定文件  Set up Analytics tracking  手把手教，一步一步照作基本就好了  Check your web-tracking-code setup  Trouble shooting 的部分，快速確定 Google analytics 是否正常運作  Adding analytics.js to Your Site  詳細解說 analytics.js 運作   被 ADblock Plus 雷了 在設定 Google analytics 時，一直失敗無法從 report &amp;gt; real-time 看到目前的狀況，顯然是出了什麼差錯。 後來從 Chrome &amp;gt; developer tools &amp;gt; network 發現https://www.google-analytics.com/analytics.js 根本沒被載入，想說直接將網址輸入 Chrome Url bar ，才發現是 Chrome 的 plugin ADblock Plus 檔掉，關掉後就恢復正常。
 不夠熟悉 browser 開發環境的 debugging ，類似 java developer 不熟 eclipse 會無法快速找到問題</description>
    </item>
    
    <item>
      <title>Google analytics 設定快速檢查</title>
      <link>https://ykhorzon.github.io/tw/content_as_toml/content/computer/web/google_analytics_setup/</link>
      <pubDate>Wed, 16 Aug 2017 22:29:08 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/content_as_toml/content/computer/web/google_analytics_setup/</guid>
      <description>設定文件  Set up Analytics tracking  手把手教，一步一步照作基本就好了  Check your web-tracking-code setup  Trouble shooting 的部分，快速確定 Google analytics 是否正常運作  Adding analytics.js to Your Site  詳細解說 analytics.js 運作   被 ADblock Plus 雷了 在設定 Google analytics 時，一直失敗無法從 report &amp;gt; real-time 看到目前的狀況，顯然是出了什麼差錯。 後來從 Chrome &amp;gt; developer tools &amp;gt; network 發現https://www.google-analytics.com/analytics.js 根本沒被載入，想說直接將網址輸入 Chrome Url bar ，才發現是 Chrome 的 plugin ADblock Plus 檔掉，關掉後就恢復正常。
 不夠熟悉 browser 開發環境的 debugging ，類似 java developer 不熟 eclipse 會無法快速找到問題</description>
    </item>
    
    <item>
      <title>DevOps 全棧工程師-活動心得</title>
      <link>https://ykhorzon.github.io/tw/agile/devops_experience/</link>
      <pubDate>Wed, 02 Aug 2017 12:41:57 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/agile/devops_experience/</guid>
      <description>Speaker:
 odd-e 柴叔(柴鋒)  (P.S. 本文演講消化後心得，加入部分我自己觀點)
歷史脈絡 開發、維運，分分合合 柴叔從開發歷史的脈絡娓娓道來，從服務或應用簡單的年代，開發（Development)與維運(Operation)可以一起包辦，但隨著複雜度的提高，逐漸將開發（Development) 與維運(Operation)獨立成兩個團隊。久而久之，雙方的溝通本成增加，合作程度低下，最終造成總體效能下降(開發與測試的關聯，但這邊不詳細敘述)。人們開始思考需要一個穿針引線的角色，他/她需打通開發與維運流程，增進溝通效率，共同協作完成任務，目前當紅的 DevOps的一種解釋。
你以為過去沒有 DevOps? 在遠古開發時代(?)，沒有 Docker 或 Ansible 這類工具。但別忘了其實底層絕大多數的工作，都可以用 shell script 完成，可見 shell script 這類基本功有多重要。時代在改變，但要完成的工作並沒有改變，大多是變複雜，解決問題的觀念類似。
再者，microservice 這類型的觀念，其實也早在 Unix 哲學(Unix philosophy)中被提及，差異是在不同系統層級實作( Do One Thing and Do It Well. 可以對照到 microservice)，當代有更方便工具，抽象化細節與簡化操作流程。
框架工具之於觀念
 工具只是溝通工具，而不是溝通的本身 舉例：Jenkins只是CI的工具，CI的關鍵是CI觀念本身，不管用任何方式達成都好
 框架工具之於基本功
 框架不會幫你解決產品的問題，幾乎與你的產品無關 基礎不紮實，只花時間在學習框架或工具，遭遇的狀況牽扯底層或基本面，也是無法處理
 舉例：Java 工程師 v.s Ops 維運工程師 上圖比較 Java 工程師與 Ops 工程師的技能對照，一目了然自己缺少哪個技能。一般前段或後端工程師的 skill set 從 bottom-up 到 top-down 大家都很清楚，但提到 DevOps 大家似乎被 Top-down 工具給迷惑住了！這算是一張check list，提醒自己是否還缺少哪個部分。</description>
    </item>
    
    <item>
      <title>DevOps 全棧工程師-活動心得</title>
      <link>https://ykhorzon.github.io/tw/content_as_toml/content/agile/devops_experience/</link>
      <pubDate>Wed, 02 Aug 2017 12:41:57 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/content_as_toml/content/agile/devops_experience/</guid>
      <description>Speaker:
 odd-e 柴叔(柴鋒)  (P.S. 本文演講消化後心得，加入部分我自己觀點)
歷史脈絡 開發、維運，分分合合 柴叔從開發歷史的脈絡娓娓道來，從服務或應用簡單的年代，開發（Development)與維運(Operation)可以一起包辦，但隨著複雜度的提高，逐漸將開發（Development) 與維運(Operation)獨立成兩個團隊。久而久之，雙方的溝通本成增加，合作程度低下，最終造成總體效能下降(開發與測試的關聯，但這邊不詳細敘述)。人們開始思考需要一個穿針引線的角色，他/她需打通開發與維運流程，增進溝通效率，共同協作完成任務，目前當紅的 DevOps的一種解釋。
你以為過去沒有 DevOps? 在遠古開發時代(?)，沒有 Docker 或 Ansible 這類工具。但別忘了其實底層絕大多數的工作，都可以用 shell script 完成，可見 shell script 這類基本功有多重要。時代在改變，但要完成的工作並沒有改變，大多是變複雜，解決問題的觀念類似。
再者，microservice 這類型的觀念，其實也早在 Unix 哲學(Unix philosophy)中被提及，差異是在不同系統層級實作( Do One Thing and Do It Well. 可以對照到 microservice)，當代有更方便工具，抽象化細節與簡化操作流程。
框架工具之於觀念
 工具只是溝通工具，而不是溝通的本身 舉例：Jenkins只是CI的工具，CI的關鍵是CI觀念本身，不管用任何方式達成都好
 框架工具之於基本功
 框架不會幫你解決產品的問題，幾乎與你的產品無關 基礎不紮實，只花時間在學習框架或工具，遭遇的狀況牽扯底層或基本面，也是無法處理
 舉例：Java 工程師 v.s Ops 維運工程師 上圖比較 Java 工程師與 Ops 工程師的技能對照，一目了然自己缺少哪個技能。一般前段或後端工程師的 skill set 從 bottom-up 到 top-down 大家都很清楚，但提到 DevOps 大家似乎被 Top-down 工具給迷惑住了！這算是一張check list，提醒自己是否還缺少哪個部分。</description>
    </item>
    
    <item>
      <title>電腦科學(Computer Science)到底在學什麼？</title>
      <link>https://ykhorzon.github.io/tw/computer/experience/what_is_computer_science/</link>
      <pubDate>Fri, 21 Jul 2017 10:35:25 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/computer/experience/what_is_computer_science/</guid>
      <description>昨天剛好在 Facebook 程式人社團社團，看見一個準備要升大學的小朋友詢問：
 想問一件事情，我已經會寫程式。 大學明年可以自由選系，如果不選資工選數學的話， 會是很不明智的決定嗎?
 認真探討這個問題前，先說說最近的感受，剛好契合此問題。
工具迭代有感 最近趕工一些專案，重新學習 Modern Web 的 Framework 和 Tools，網頁前端工具迭代速度非常快，大約每3年都會重新大洗牌一次。面對問題選擇適合的工具，在工具琳瑯滿目的年代成為生從必要一種技術。各種 Framework 和 Tools 像是工具箱中的神奇法寶，但如選擇不當，下場會是事倍功半。
 工具快速迭代時空下，我要抓住什麼才能存活下去？ 不斷學習，只是基本條件;不斷突破自己的極限，是挑戰  我們還能作什麼？
 文章到這裡，是不是也發現問題和前面小朋友的問題，也許有幾分神似？如果能夠重來，你會把時間投注在哪些項目？做些什麼事情？
回到原本的故事，小朋友的問題  如果是我，怎麼回覆他的問題？
 我會把問題拆解成幾個部分，先別亂下開處方(建議)
 你了解自己適合什麼嗎？  做什麼事情讓你感到興奮？ 哪先事情能夠你願意不眠不休投入，樂此不疲？ 有什麼確定很定厭惡的事情嗎？  你能把自己表達問題表達清楚嗎？  你有什麼考量？工作導向？經濟？包袱？  理解你想選擇的內容是什麼嗎？  資工系在學什麼？為什麼而學？應用？ 同樣的問題，數學系？   大家怎麼回答？ 我大致用上面拆解問題架構分一類，就簡稱第一類、第二類與第三類
第三類 這則留言是所有這類中最好，直接點出重點，夠豐富與精闢，資訊科學是在做什麼？本質的精神內容都被詳細列舉。
 資訊科學: 計算的本質 + 電腦軟硬體架構運作原理
 資工系從來都不是程式系 資工的精神，在於瞭解計算的本質。 舉例而言，Data Structure 教我們如何有效管理複雜且龐大的資料。Algorithm 教我們何謂高效率的計算方法。Compiler 教我們如何系統化的轉換高階語言。Computation Theory 教我們如何定義一個問題是否可被計算，與如何評估計算複雜度。Computer Architecture 教我們如何設計有效的計算機器。 寫程式本身只是一種實作方法，不同領域的人，學習與使用不同的程式語言解決該領域的特定問題。寫程式本身如此而已，當然，要寫的好，還是得有多年的苦練才行。 資工系的本質亦是解決問題。針對一個可被計算之問題，找一種更好的抽像計算方法，用軟體或是硬題實作皆可，使得問題可以在更短的時間內，或是更少的計算資源之下被解決。 資工領域的聖殿，Turing Award。 資工領域的聖杯，P = NP ?</description>
    </item>
    
    <item>
      <title>電腦科學(Computer Science)到底在學什麼？</title>
      <link>https://ykhorzon.github.io/tw/content_as_toml/content/computer/experience/what_is_computer_science/</link>
      <pubDate>Fri, 21 Jul 2017 10:35:25 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/content_as_toml/content/computer/experience/what_is_computer_science/</guid>
      <description>昨天剛好在 Facebook 程式人社團社團，看見一個準備要升大學的小朋友詢問：
 想問一件事情，我已經會寫程式。 大學明年可以自由選系，如果不選資工選數學的話， 會是很不明智的決定嗎?
 認真探討這個問題前，先說說最近的感受，剛好契合此問題。
工具迭代有感 最近趕工一些專案，重新學習 Modern Web 的 Framework 和 Tools，網頁前端工具迭代速度非常快，大約每3年都會重新大洗牌一次。面對問題選擇適合的工具，在工具琳瑯滿目的年代成為生從必要一種技術。各種 Framework 和 Tools 像是工具箱中的神奇法寶，但如選擇不當，下場會是事倍功半。
 工具快速迭代時空下，我要抓住什麼才能存活下去？ 不斷學習，只是基本條件;不斷突破自己的極限，是挑戰  我們還能作什麼？
 文章到這裡，是不是也發現問題和前面小朋友的問題，也許有幾分神似？如果能夠重來，你會把時間投注在哪些項目？做些什麼事情？
回到原本的故事，小朋友的問題  如果是我，怎麼回覆他的問題？
 我會把問題拆解成幾個部分，先別亂下開處方(建議)
 你了解自己適合什麼嗎？  做什麼事情讓你感到興奮？ 哪先事情能夠你願意不眠不休投入，樂此不疲？ 有什麼確定很定厭惡的事情嗎？  你能把自己表達問題表達清楚嗎？  你有什麼考量？工作導向？經濟？包袱？  理解你想選擇的內容是什麼嗎？  資工系在學什麼？為什麼而學？應用？ 同樣的問題，數學系？   大家怎麼回答？ 我大致用上面拆解問題架構分一類，就簡稱第一類、第二類與第三類
第三類 這則留言是所有這類中最好，直接點出重點，夠豐富與精闢，資訊科學是在做什麼？本質的精神內容都被詳細列舉。
 資訊科學: 計算的本質 + 電腦軟硬體架構運作原理
 資工系從來都不是程式系 資工的精神，在於瞭解計算的本質。 舉例而言，Data Structure 教我們如何有效管理複雜且龐大的資料。Algorithm 教我們何謂高效率的計算方法。Compiler 教我們如何系統化的轉換高階語言。Computation Theory 教我們如何定義一個問題是否可被計算，與如何評估計算複雜度。Computer Architecture 教我們如何設計有效的計算機器。 寫程式本身只是一種實作方法，不同領域的人，學習與使用不同的程式語言解決該領域的特定問題。寫程式本身如此而已，當然，要寫的好，還是得有多年的苦練才行。 資工系的本質亦是解決問題。針對一個可被計算之問題，找一種更好的抽像計算方法，用軟體或是硬題實作皆可，使得問題可以在更短的時間內，或是更少的計算資源之下被解決。 資工領域的聖殿，Turing Award。 資工領域的聖杯，P = NP ?</description>
    </item>
    
    <item>
      <title>關於我</title>
      <link>https://ykhorzon.github.io/tw/about/me/</link>
      <pubDate>Sat, 15 Jul 2017 12:17:42 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/about/me/</guid>
      <description> 你好, 我是 ykhorizon (a.k.a. ykhu in community)， 我出生長大在台灣，興趣非常廣泛。 努力堅持自己信念與原則，設法讓自己做好玩的事情，遇見有趣的人。
與我有關的組織 [Elastic Farm]() Open Agri. Lab
興趣  Programming, Agile and Startup Agriculture, Sustainable and Irrigation Music, Guitar and Grogressive Cooking, dog and insect  目標  Simple Do not forget the initial motivation Underpin myself, family and friends  聯絡我  twitter github linkedin Or contact me with ykhorizon.light@gmail.com  </description>
    </item>
    
    <item>
      <title>關於我</title>
      <link>https://ykhorzon.github.io/tw/content_as_toml/content/about/me/</link>
      <pubDate>Sat, 15 Jul 2017 12:17:42 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/content_as_toml/content/about/me/</guid>
      <description> 你好, 我是 ykhorizon (a.k.a. ykhu in community)， 我出生長大在台灣，興趣非常廣泛。 努力堅持自己信念與原則，設法讓自己做好玩的事情，遇見有趣的人。
與我有關的組織 [Elastic Farm]() Open Agri. Lab
興趣  Programming, Agile and Startup Agriculture, Sustainable and Irrigation Music, Guitar and Grogressive Cooking, dog and insect  目標  Simple Do not forget the initial motivation Underpin myself, family and friends  聯絡我  twitter github linkedin Or contact me with ykhorizon.light@gmail.com  </description>
    </item>
    
    <item>
      <title>關於 hugo 的文件</title>
      <link>https://ykhorzon.github.io/tw/computer/web/hugo/hugo_doc_memo/</link>
      <pubDate>Fri, 30 Jun 2017 23:44:12 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/computer/web/hugo/hugo_doc_memo/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>關於 hugo 的文件</title>
      <link>https://ykhorzon.github.io/tw/content_as_toml/content/computer/web/hugo/hugo_doc_memo/</link>
      <pubDate>Fri, 30 Jun 2017 23:44:12 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/content_as_toml/content/computer/web/hugo/hugo_doc_memo/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>類似Design Thinking的討論實戰檢討</title>
      <link>https://ykhorzon.github.io/tw/content_as_toml/content/post/design_thinking/practice/</link>
      <pubDate>Thu, 29 Jun 2017 13:11:58 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/content_as_toml/content/post/design_thinking/practice/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>類似Design Thinking的討論實戰檢討</title>
      <link>https://ykhorzon.github.io/tw/2017/06/29/%E9%A1%9E%E4%BC%BCdesign-thinking%E7%9A%84%E8%A8%8E%E8%AB%96%E5%AF%A6%E6%88%B0%E6%AA%A2%E8%A8%8E/</link>
      <pubDate>Thu, 29 Jun 2017 13:11:58 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/06/29/%E9%A1%9E%E4%BC%BCdesign-thinking%E7%9A%84%E8%A8%8E%E8%AB%96%E5%AF%A6%E6%88%B0%E6%AA%A2%E8%A8%8E/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日常中的世代對談 - 討論柯文哲市長 2 採取行動</title>
      <link>https://ykhorzon.github.io/tw/content_as_toml/content/post/daily/talk_to_the_previous_generation2/</link>
      <pubDate>Thu, 29 Jun 2017 08:33:18 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/content_as_toml/content/post/daily/talk_to_the_previous_generation2/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日常中的世代對談 - 討論柯文哲市長 2 採取行動</title>
      <link>https://ykhorzon.github.io/tw/2017/06/29/%E6%97%A5%E5%B8%B8%E4%B8%AD%E7%9A%84%E4%B8%96%E4%BB%A3%E5%B0%8D%E8%AB%87---%E8%A8%8E%E8%AB%96%E6%9F%AF%E6%96%87%E5%93%B2%E5%B8%82%E9%95%B7-2-%E6%8E%A1%E5%8F%96%E8%A1%8C%E5%8B%95/</link>
      <pubDate>Thu, 29 Jun 2017 08:33:18 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/06/29/%E6%97%A5%E5%B8%B8%E4%B8%AD%E7%9A%84%E4%B8%96%E4%BB%A3%E5%B0%8D%E8%AB%87---%E8%A8%8E%E8%AB%96%E6%9F%AF%E6%96%87%E5%93%B2%E5%B8%82%E9%95%B7-2-%E6%8E%A1%E5%8F%96%E8%A1%8C%E5%8B%95/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>設計思考醒醒腦</title>
      <link>https://ykhorzon.github.io/tw/content_as_toml/content/post/design_thinking/design-thinking-refresh-from-scenario-lab-presentation/</link>
      <pubDate>Wed, 28 Jun 2017 14:50:26 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/content_as_toml/content/post/design_thinking/design-thinking-refresh-from-scenario-lab-presentation/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>設計思考醒醒腦</title>
      <link>https://ykhorzon.github.io/tw/2017/06/28/%E8%A8%AD%E8%A8%88%E6%80%9D%E8%80%83%E9%86%92%E9%86%92%E8%85%A6/</link>
      <pubDate>Wed, 28 Jun 2017 14:50:26 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/06/28/%E8%A8%AD%E8%A8%88%E6%80%9D%E8%80%83%E9%86%92%E9%86%92%E8%85%A6/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Blog採用hugo重新開張！</title>
      <link>https://ykhorzon.github.io/tw/computer/web/hugo/new_blog/</link>
      <pubDate>Wed, 07 Jun 2017 01:23:59 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/computer/web/hugo/new_blog/</guid>
      <description>&lt;h1 id=&#34;outline&#34;&gt;Outline&lt;/h1&gt;

&lt;h1 id=&#34;動機&#34;&gt;動機&lt;/h1&gt;

&lt;p&gt;我的github page blog又重新開張，但這次改用了 hugo 作為 static page generator。
轉換的原因主要是想要支援多重語言，解決原本分成2個獨立不同的blog，造成維護困難的問題。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Blog採用hugo重新開張！</title>
      <link>https://ykhorzon.github.io/tw/content_as_toml/content/computer/web/hugo/new_blog/</link>
      <pubDate>Wed, 07 Jun 2017 01:23:59 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/content_as_toml/content/computer/web/hugo/new_blog/</guid>
      <description>&lt;h1 id=&#34;outline&#34;&gt;Outline&lt;/h1&gt;

&lt;h1 id=&#34;動機&#34;&gt;動機&lt;/h1&gt;

&lt;p&gt;我的github page blog又重新開張，但這次改用了 hugo 作為 static page generator。
轉換的原因主要是想要支援多重語言，解決原本分成2個獨立不同的blog，造成維護困難的問題。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>