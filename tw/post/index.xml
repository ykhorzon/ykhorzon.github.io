<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>https://ykhorzon.github.io/tw/post/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>tw</language>
    <managingEditor>ykhorizon@gmail.com (ykhorizon)</managingEditor>
    <webMaster>ykhorizon@gmail.com (ykhorizon)</webMaster>
    <copyright>(c) 2017 ykhorizon</copyright>
    <lastBuildDate>Fri, 04 May 2018 19:08:57 +0800</lastBuildDate>
    
	<atom:link href="https://ykhorzon.github.io/tw/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>硬體開發流程與計畫管理 for Startup Part II: 硬體開發流程中的陷阱</title>
      <link>https://ykhorzon.github.io/tw/2018/05/04/%E7%A1%AC%E9%AB%94%E9%96%8B%E7%99%BC%E6%B5%81%E7%A8%8B%E8%88%87%E8%A8%88%E7%95%AB%E7%AE%A1%E7%90%86-for-startup-part-ii-%E7%A1%AC%E9%AB%94%E9%96%8B%E7%99%BC%E6%B5%81%E7%A8%8B%E4%B8%AD%E7%9A%84%E9%99%B7%E9%98%B1/</link>
      <pubDate>Fri, 04 May 2018 19:08:57 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2018/05/04/%E7%A1%AC%E9%AB%94%E9%96%8B%E7%99%BC%E6%B5%81%E7%A8%8B%E8%88%87%E8%A8%88%E7%95%AB%E7%AE%A1%E7%90%86-for-startup-part-ii-%E7%A1%AC%E9%AB%94%E9%96%8B%E7%99%BC%E6%B5%81%E7%A8%8B%E4%B8%AD%E7%9A%84%E9%99%B7%E9%98%B1/</guid>
      <description>&lt;h1 id=&#34;startup-硬體開發遭遇什麼陷阱&#34;&gt;Startup 硬體開發遭遇什麼陷阱？&lt;/h1&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;想像一下，你是一名新創公司的頭號工程師，公司沒有資源（缺錢、缺人），又正在開發沒人做過的產品，沒有所謂的類似產品可以參考，
一切從零開始打造。新創公司與成熟公司最大差異，新創公司沒有前人累積的軟硬體、經驗與工具，可以借助節省開發，減少走冤枉路的時間，
也就是 &lt;strong&gt;Not much to leverage&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;what is &lt;a href=&#34;http://mrjamie.cc/2013/06/03/good-strategy-leverage/&#34;&gt;leverage&lt;/a&gt;?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;from Mr. Jamie, 創業 CEO：好策略用「支點」撐起地球&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;更糟的是，你的產品牽扯到硬體生產，硬體不像是軟體，只需要電腦開發與運行程式的裝置就可以；硬體製造牽扯到各種物理限制與考量，不是東西可以動就好；硬體產品不可能完全倚靠自己的公司生產，為了降低生產成本，勢必需要尋找配合的製造廠商，這又是另一個大陷阱。此外，當你的產品需要賣到不同國家，又牽扯各國的認證等等。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;所以在硬體製造上，有哪些陷阱可以事先避免呢？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>硬體開發流程與計畫管理 for Startup Part I: 硬體開發流程</title>
      <link>https://ykhorzon.github.io/tw/2018/04/28/%E7%A1%AC%E9%AB%94%E9%96%8B%E7%99%BC%E6%B5%81%E7%A8%8B%E8%88%87%E8%A8%88%E7%95%AB%E7%AE%A1%E7%90%86-for-startup-part-i-%E7%A1%AC%E9%AB%94%E9%96%8B%E7%99%BC%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Sat, 28 Apr 2018 23:43:06 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2018/04/28/%E7%A1%AC%E9%AB%94%E9%96%8B%E7%99%BC%E6%B5%81%E7%A8%8B%E8%88%87%E8%A8%88%E7%95%AB%E7%AE%A1%E7%90%86-for-startup-part-i-%E7%A1%AC%E9%AB%94%E9%96%8B%E7%99%BC%E6%B5%81%E7%A8%8B/</guid>
      <description>&lt;h2 id=&#34;為什麼-span-style-color-red-軟體工程師-span-需要知道-span-style-color-blue-硬體開發流程-span&#34;&gt;為什麼 &lt;span style=&#34;color:red;&#34;&gt;軟體工程師&lt;/span&gt; 需要知道 &lt;span style=&#34;color:blue;&#34;&gt;硬體開發流程&lt;/span&gt;？&lt;/h2&gt;

&lt;p&gt;設想一下，你是一家新創公司頭號軟體工程師，公司的第一個產品是一台機器人，你完全沒摸過硬體，當你和硬體工程師要合作開發，你該怎麼辦？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;軟體工程師對 &lt;strong&gt;硬體開發流程&lt;/strong&gt; 通常是一無所知，造成與硬體工程師（機構與電路）溝通產生障礙，無法理解對方的考量，造成團隊衝突。&lt;/li&gt;
&lt;li&gt;開發過程中，軟硬體產品在軟體與硬體有部分相依性問題，尤其是在測試階段，軟硬硬體必須整合討論，才能完成完整測試。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;打破這條鴻溝的辦法是：明白對方的開發流程，理解每一個軟硬體相依性的部分，以及硬體工程師的考量，知道更多硬體工程師在想什麼，建立溝通前的情境脈絡，有助於減少溝通成本，讓合作中的問題更快浮現，找出癥結點。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Agile Meetup 新竹 - 系統思考工作坊 心得</title>
      <link>https://ykhorzon.github.io/tw/2018/01/16/agile-meetup-%E6%96%B0%E7%AB%B9---%E7%B3%BB%E7%B5%B1%E6%80%9D%E8%80%83%E5%B7%A5%E4%BD%9C%E5%9D%8A-%E5%BF%83%E5%BE%97/</link>
      <pubDate>Tue, 16 Jan 2018 20:04:19 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2018/01/16/agile-meetup-%E6%96%B0%E7%AB%B9---%E7%B3%BB%E7%B5%B1%E6%80%9D%E8%80%83%E5%B7%A5%E4%BD%9C%E5%9D%8A-%E5%BF%83%E5%BE%97/</guid>
      <description>&lt;h1 id=&#34;outline&#34;&gt;Outline&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%AD%B8%E7%BF%92%E7%9B%AE%E6%A8%99&#34;&gt;學習目標&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%B0%A1%E4%BB%8B%E8%88%87%E5%8B%95%E6%A9%9F&#34;&gt;簡介與動機&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#system-think-%E7%B3%BB%E7%B5%B1%E6%80%9D%E8%80%83&#34;&gt;System Think 系統思考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%B3%BB%E7%B5%B1&#34;&gt;系統&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#causal-loop-diagram-cld-%E5%9C%96%E5%83%8F%E5%8C%96-structure-of-system&#34;&gt;Causal Loop Diagram (CLD), 圖像化 Structure of System&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%A6%82%E4%BD%95%E5%BB%BA%E6%A7%8Bcld%EF%BC%9F-workshop%E5%B0%8F%E7%B5%84%E6%93%8D%E4%BD%9C%E9%81%8E%E7%A8%8B&#34;&gt;如何建構CLD？ (Workshop小組操作過程)&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1%E6%8F%8F%E8%BF%B0%E5%95%8F%E9%A1%8C%E8%88%87%E5%AE%9A%E7%BE%A9%E4%B8%BB%E8%BB%B8&#34;&gt;1.描述問題與定義主軸&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2%E5%B0%8B%E6%89%BE%E8%AE%8A%E6%95%B8&#34;&gt;2.尋找變數&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BB%80%E9%BA%BC%E6%98%AF%E8%AE%8A%E6%95%B8%EF%BC%9F&#34;&gt;什麼是變數？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%9C%98%E9%9A%8A%E6%93%8D%E4%BD%9C&#34;&gt;團隊操作&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3%E5%BB%BA%E7%AB%8B%E9%97%9C%E8%81%AFlink&#34;&gt;3.建立關聯(link)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4%E5%AE%8C%E6%88%90%E7%B3%BB%E7%B5%B1%E7%9A%84-cld&#34;&gt;4.完成系統的 CLD&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#41-%E5%85%88%E5%BB%BA%E7%AB%8B%E4%B8%80%E6%A2%9D%E7%B0%A1%E5%96%AE%E8%BF%B4%E5%9C%88loop&#34;&gt;4.1 先建立一條簡單迴圈(Loop)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#42-%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E8%BF%B4%E5%9C%88&#34;&gt;4.2 完成所有迴圈&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A0%85&#34;&gt;使用注意事項&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3&#34;&gt;深入了解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#reference&#34;&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>發展你的顧客旅程-從生態系視角</title>
      <link>https://ykhorzon.github.io/tw/2017/11/18/%E7%99%BC%E5%B1%95%E4%BD%A0%E7%9A%84%E9%A1%A7%E5%AE%A2%E6%97%85%E7%A8%8B-%E5%BE%9E%E7%94%9F%E6%85%8B%E7%B3%BB%E8%A6%96%E8%A7%92/</link>
      <pubDate>Sat, 18 Nov 2017 19:54:37 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/11/18/%E7%99%BC%E5%B1%95%E4%BD%A0%E7%9A%84%E9%A1%A7%E5%AE%A2%E6%97%85%E7%A8%8B-%E5%BE%9E%E7%94%9F%E6%85%8B%E7%B3%BB%E8%A6%96%E8%A7%92/</guid>
      <description>&lt;h1 id=&#34;outline&#34;&gt;Outline&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BB%80%E9%BA%BC%E6%98%AF%E6%9C%8D%E5%8B%99%E8%A8%AD%E8%A8%88%EF%BC%9F&#34;&gt;什麼是服務設計？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%A1%A7%E5%AE%A2%E6%97%85%E7%A8%8B-customer-journey&#34;&gt;顧客旅程 Customer Journey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%94%9F%E6%85%8B%E7%B3%BB-ecosystem&#34;&gt;生態系 Ecosystem&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%97%A9%E9%A4%90%E5%BA%97%E6%A1%88%E4%BE%8B&#34;&gt;早餐店案例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%97%85%E9%81%8A%E5%B9%B3%E5%AE%89%E4%BF%9D%E9%9A%AA%E6%A1%88%E4%BE%8B&#34;&gt;旅遊平安保險案例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#workshop-%E6%B5%81%E7%A8%8B&#34;&gt;Workshop 流程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>virtualbox 網路設定 NAT v.s. Bridge mode</title>
      <link>https://ykhorzon.github.io/tw/2017/11/17/virtualbox-%E7%B6%B2%E8%B7%AF%E8%A8%AD%E5%AE%9A-nat-v.s.-bridge-mode/</link>
      <pubDate>Fri, 17 Nov 2017 16:57:00 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/11/17/virtualbox-%E7%B6%B2%E8%B7%AF%E8%A8%AD%E5%AE%9A-nat-v.s.-bridge-mode/</guid>
      <description>&lt;h1 id=&#34;outline&#34;&gt;Outline&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#scenario&#34;&gt;Scenario&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BB%80%E9%BA%BC%E6%98%AF-nat-bridge-%E5%92%8C-host-only&#34;&gt;什麼是 NAT, Bridge 和 Host-Only?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%BB%B6%E4%BC%B8%E5%95%8F%E9%A1%8C%EF%BC%9A192168xxxxxx-%E5%92%8C-17216xxxxxx-%E6%98%AF%E4%BB%80%E9%BA%BC%E6%9D%B1%E8%A5%BF%EF%BC%8C%E4%BB%A3%E8%A1%A8%E4%BB%80%E9%BA%BC%E6%84%8F%E7%BE%A9%EF%BC%9F&#34;&gt;延伸問題：192.168.xxx.xxx 和 172.16.xxx.xxx 是什麼東西，代表什麼意義？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%8E%A8%E8%AB%96%E4%B8%80%E4%B8%8B%EF%BC%8C%E6%88%91%E7%9A%84%E5%95%8F%E9%A1%8C%E6%98%AF%E4%BB%80%E9%BA%BC%EF%BC%9F&#34;&gt;推論一下，我的問題是什麼？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[影片筆記] 農作物病蟲害診斷--呂柏寬</title>
      <link>https://ykhorzon.github.io/tw/2017/10/27/%E5%BD%B1%E7%89%87%E7%AD%86%E8%A8%98-%E8%BE%B2%E4%BD%9C%E7%89%A9%E7%97%85%E8%9F%B2%E5%AE%B3%E8%A8%BA%E6%96%B7--%E5%91%82%E6%9F%8F%E5%AF%AC/</link>
      <pubDate>Fri, 27 Oct 2017 18:38:34 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/10/27/%E5%BD%B1%E7%89%87%E7%AD%86%E8%A8%98-%E8%BE%B2%E4%BD%9C%E7%89%A9%E7%97%85%E8%9F%B2%E5%AE%B3%E8%A8%BA%E6%96%B7--%E5%91%82%E6%9F%8F%E5%AF%AC/</guid>
      <description>影片  內容摘要 物理防治 3:33
阻隔  設施栽培 防蟲網(記得連土壤一起網住，許多昆蟲會從土壤進來) 套袋 雜草抑制蓆(隔絕害蟲到土裡)  視覺  黏板(捕蟲並最重要是監測蟲害狀態)  溫度調控 種苗使用的土壤，事先用高溫蒸汽消毒土壤 翻攪土壤，讓地下害蟲土壤到表面，讓太陽高溫殺死幼蟲
耕作防治管理 9:00
改善栽培環境 淹水
 殺死地下害蟲  作物混作
 適合小農地耕作  間作、輪作
 EX: 十字花科連作病害容易嚴重  苗期管理
 健康的種苗  處理觀念
 評估的關鍵在於發現的時期，早期可以盡早治療，接近作物收成可以考慮
 生物防治管理 17:30
捕食性天敵 17:46 螳螂、蜘蛛、草蛉、瓢蟲
寄生性天敵 23:24 小繭蜂
亞洲玉米螟 赤眼卵寄生蜂
微生物資材 26:27 細菌 - 蘇力菌 - 黑殭菌 - 白殭菌
 Tips: 注意死亡蟲體，可以製造昆蟲感冒，將屍體打汁在噴灑，幫助散播
環境濕度與其他環境因子，對於微生物防治的效果影響重大
 真菌 病毒 線蟲</description>
    </item>
    
    <item>
      <title>蔡月夏--食用百合鱗莖有機栽培模式之建立</title>
      <link>https://ykhorzon.github.io/tw/2017/10/27/%E8%94%A1%E6%9C%88%E5%A4%8F--%E9%A3%9F%E7%94%A8%E7%99%BE%E5%90%88%E9%B1%97%E8%8E%96%E6%9C%89%E6%A9%9F%E6%A0%BD%E5%9F%B9%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%BB%BA%E7%AB%8B/</link>
      <pubDate>Fri, 27 Oct 2017 18:38:34 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/10/27/%E8%94%A1%E6%9C%88%E5%A4%8F--%E9%A3%9F%E7%94%A8%E7%99%BE%E5%90%88%E9%B1%97%E8%8E%96%E6%9C%89%E6%A9%9F%E6%A0%BD%E5%9F%B9%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%BB%BA%E7%AB%8B/</guid>
      <description>品種
 四川百合(藥用) 蘭州百合(鮮食) 日本百合  長期進口量與價格統計(15年) 產量逐年降低，原因是產地病害
栽培流程
 採土樣本，決定如何施灑肥料(N,P,K) 栽種密度安排  花改場：水分必須充足 農民：過水分造成草蔓生 甲殼素殺菌 必須除草 第四週之後，固定每週噴甲殼素 第 50 天 第一次追肥 5個月採收
產出結果：
子球半徑寬度
適當儲存可以5個月，品質不變
生理病害 - 葉燒病 百合灰黴病
保存：</description>
    </item>
    
    <item>
      <title>[Codewars] Mumbling</title>
      <link>https://ykhorzon.github.io/tw/2017/10/26/codewars-mumbling/</link>
      <pubDate>Thu, 26 Oct 2017 20:23:11 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/10/26/codewars-mumbling/</guid>
      <description>&lt;h1 id=&#34;outline&#34;&gt;Outline&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%95%8F%E9%A1%8C%E7%AF%84%E4%BE%8B&#34;&gt;問題範例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%88%91%E7%9A%84%E5%AF%AB%E6%B3%95&#34;&gt;我的寫法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BB%96%E4%BA%BA%E8%A7%A3%E6%B3%95%E8%B3%9E%E6%9E%90&#34;&gt;他人解法賞析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%AF%94%E8%BC%83%E5%B7%AE%E7%95%B0&#34;&gt;比較差異&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#linq&#34;&gt;LINQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stringjoin&#34;&gt;String.Join&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stringselect-%E8%88%87-lambda-%E9%81%8B%E7%AE%97%E5%BC%8F&#34;&gt;String.Select 與 lambda 運算式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Matplotlib 基本介紹</title>
      <link>https://ykhorzon.github.io/tw/2017/10/25/matplotlib-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9/</link>
      <pubDate>Wed, 25 Oct 2017 12:27:23 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/10/25/matplotlib-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9/</guid>
      <description>&lt;h1 id=&#34;outline&#34;&gt;Outline&lt;/h1&gt;

&lt;!-- TOC --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#outline&#34;&gt;Outline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#figure&#34;&gt;Figure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#axes&#34;&gt;Axes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#axis&#34;&gt;Axis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#artist&#34;&gt;Artist&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#matplotlib-pyplot-和-pylab-傻傻分不清楚&#34;&gt;Matplotlib, pyplot 和 pylab 傻傻分不清楚&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#關於使用-pyplot-的-code-style&#34;&gt;關於使用 pyplot 的 code style&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#backend-是什麼&#34;&gt;Backend 是什麼？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#reference&#34;&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- /TOC --&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>做事方法檢討 以打造個人blog為例</title>
      <link>https://ykhorzon.github.io/tw/2017/10/09/%E5%81%9A%E4%BA%8B%E6%96%B9%E6%B3%95%E6%AA%A2%E8%A8%8E-%E4%BB%A5%E6%89%93%E9%80%A0%E5%80%8B%E4%BA%BAblog%E7%82%BA%E4%BE%8B/</link>
      <pubDate>Mon, 09 Oct 2017 13:40:21 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/10/09/%E5%81%9A%E4%BA%8B%E6%96%B9%E6%B3%95%E6%AA%A2%E8%A8%8E-%E4%BB%A5%E6%89%93%E9%80%A0%E5%80%8B%E4%BA%BAblog%E7%82%BA%E4%BE%8B/</guid>
      <description>&lt;h2 id=&#34;先說結論&#34;&gt;先說結論&lt;/h2&gt;

&lt;h3 id=&#34;心魔1-自己硬幹出來比較-cool&#34;&gt;心魔1： 自己硬幹出來比較 Cool&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;心理層面：愛面子&lt;/li&gt;
&lt;li&gt;傾向做有短期成就感事情（但不一定是最重要的事情）

&lt;ul&gt;
&lt;li&gt;自己開發一些 static site blog 的小功能&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;解藥1&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;達成目標才是重點，方法是其次，時常提醒自己最重的目標，浪費時間在細節，倒是進度不足或偏離軌道。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Google analytics 設定快速檢查</title>
      <link>https://ykhorzon.github.io/tw/2017/08/16/google-analytics-%E8%A8%AD%E5%AE%9A%E5%BF%AB%E9%80%9F%E6%AA%A2%E6%9F%A5/</link>
      <pubDate>Wed, 16 Aug 2017 22:29:08 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/08/16/google-analytics-%E8%A8%AD%E5%AE%9A%E5%BF%AB%E9%80%9F%E6%AA%A2%E6%9F%A5/</guid>
      <description>設定文件  Set up Analytics tracking  手把手教，一步一步照作基本就好了  Check your web-tracking-code setup  Trouble shooting 的部分，快速確定 Google analytics 是否正常運作  Adding analytics.js to Your Site  詳細解說 analytics.js 運作   被 ADblock Plus 雷了 在設定 Google analytics 時，一直失敗無法從 report &amp;gt; real-time 看到目前的狀況，顯然是出了什麼差錯。 後來從 Chrome &amp;gt; developer tools &amp;gt; network 發現https://www.google-analytics.com/analytics.js 根本沒被載入，想說直接將網址輸入 Chrome Url bar ，才發現是 Chrome 的 plugin ADblock Plus 檔掉，關掉後就恢復正常。
 不夠熟悉 browser 開發環境的 debugging ，類似 java developer 不熟 eclipse 會無法快速找到問題</description>
    </item>
    
    <item>
      <title>DevOps 全棧工程師-活動心得</title>
      <link>https://ykhorzon.github.io/tw/2017/08/02/devops-%E5%85%A8%E6%A3%A7%E5%B7%A5%E7%A8%8B%E5%B8%AB-%E6%B4%BB%E5%8B%95%E5%BF%83%E5%BE%97/</link>
      <pubDate>Wed, 02 Aug 2017 12:41:57 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/08/02/devops-%E5%85%A8%E6%A3%A7%E5%B7%A5%E7%A8%8B%E5%B8%AB-%E6%B4%BB%E5%8B%95%E5%BF%83%E5%BE%97/</guid>
      <description>Speaker:
 odd-e 柴叔(柴鋒)  (P.S. 本文演講消化後心得，加入部分我自己觀點)
歷史脈絡 開發、維運，分分合合 柴叔從開發歷史的脈絡娓娓道來，從服務或應用簡單的年代，開發（Development)與維運(Operation)可以一起包辦，但隨著複雜度的提高，逐漸將開發（Development) 與維運(Operation)獨立成兩個團隊。久而久之，雙方的溝通本成增加，合作程度低下，最終造成總體效能下降(開發與測試的關聯，但這邊不詳細敘述)。人們開始思考需要一個穿針引線的角色，他/她需打通開發與維運流程，增進溝通效率，共同協作完成任務，目前當紅的 DevOps的一種解釋。
你以為過去沒有 DevOps? 在遠古開發時代(?)，沒有 Docker 或 Ansible 這類工具。但別忘了其實底層絕大多數的工作，都可以用 shell script 完成，可見 shell script 這類基本功有多重要。時代在改變，但要完成的工作並沒有改變，大多是變複雜，解決問題的觀念類似。
再者，microservice 這類型的觀念，其實也早在 Unix 哲學(Unix philosophy)中被提及，差異是在不同系統層級實作( Do One Thing and Do It Well. 可以對照到 microservice)，當代有更方便工具，抽象化細節與簡化操作流程。
框架工具之於觀念
 工具只是溝通工具，而不是溝通的本身 舉例：Jenkins只是CI的工具，CI的關鍵是CI觀念本身，不管用任何方式達成都好
 框架工具之於基本功
 框架不會幫你解決產品的問題，幾乎與你的產品無關 基礎不紮實，只花時間在學習框架或工具，遭遇的狀況牽扯底層或基本面，也是無法處理
 舉例：Java 工程師 v.s Ops 維運工程師 上圖比較 Java 工程師與 Ops 工程師的技能對照，一目了然自己缺少哪個技能。一般前段或後端工程師的 skill set 從 bottom-up 到 top-down 大家都很清楚，但提到 DevOps 大家似乎被 Top-down 工具給迷惑住了！這算是一張check list，提醒自己是否還缺少哪個部分。</description>
    </item>
    
    <item>
      <title>電腦科學(Computer Science)到底在學什麼？</title>
      <link>https://ykhorzon.github.io/tw/2017/07/21/%E9%9B%BB%E8%85%A6%E7%A7%91%E5%AD%B8computer-science%E5%88%B0%E5%BA%95%E5%9C%A8%E5%AD%B8%E4%BB%80%E9%BA%BC/</link>
      <pubDate>Fri, 21 Jul 2017 10:35:25 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/07/21/%E9%9B%BB%E8%85%A6%E7%A7%91%E5%AD%B8computer-science%E5%88%B0%E5%BA%95%E5%9C%A8%E5%AD%B8%E4%BB%80%E9%BA%BC/</guid>
      <description>&lt;p&gt;昨天剛好在 Facebook 程式人社團社團，看見一個準備要升大學的小朋友詢問：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;想問一件事情，我已經會寫程式。&lt;br/&gt;
大學明年可以自由選系，如果不選資工選數學的話，&lt;br/&gt;
會是很不明智的決定嗎?&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>類似Design Thinking的討論實戰檢討</title>
      <link>https://ykhorzon.github.io/tw/2017/06/29/%E9%A1%9E%E4%BC%BCdesign-thinking%E7%9A%84%E8%A8%8E%E8%AB%96%E5%AF%A6%E6%88%B0%E6%AA%A2%E8%A8%8E/</link>
      <pubDate>Thu, 29 Jun 2017 13:11:58 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/06/29/%E9%A1%9E%E4%BC%BCdesign-thinking%E7%9A%84%E8%A8%8E%E8%AB%96%E5%AF%A6%E6%88%B0%E6%AA%A2%E8%A8%8E/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日常中的世代對談 - 討論柯文哲市長 2 採取行動</title>
      <link>https://ykhorzon.github.io/tw/2017/06/29/%E6%97%A5%E5%B8%B8%E4%B8%AD%E7%9A%84%E4%B8%96%E4%BB%A3%E5%B0%8D%E8%AB%87---%E8%A8%8E%E8%AB%96%E6%9F%AF%E6%96%87%E5%93%B2%E5%B8%82%E9%95%B7-2-%E6%8E%A1%E5%8F%96%E8%A1%8C%E5%8B%95/</link>
      <pubDate>Thu, 29 Jun 2017 08:33:18 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/06/29/%E6%97%A5%E5%B8%B8%E4%B8%AD%E7%9A%84%E4%B8%96%E4%BB%A3%E5%B0%8D%E8%AB%87---%E8%A8%8E%E8%AB%96%E6%9F%AF%E6%96%87%E5%93%B2%E5%B8%82%E9%95%B7-2-%E6%8E%A1%E5%8F%96%E8%A1%8C%E5%8B%95/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>農業模擬工具</title>
      <link>https://ykhorzon.github.io/tw/2017/05/07/%E8%BE%B2%E6%A5%AD%E6%A8%A1%E6%93%AC%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Sun, 07 May 2017 18:29:48 +0000</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/05/07/%E8%BE%B2%E6%A5%AD%E6%A8%A1%E6%93%AC%E5%B7%A5%E5%85%B7/</guid>
      <description>一句話描述本文重點
 從這篇文章得到    目錄 Software Simulation Tools for Agriculture
Todo for Contents 分類工具 簡單敘述每個工具目的與功能 Why Case2
引言 - 為什麼需要農業模擬軟體工具?
Case1: 大範圍農業 - 澳洲農民
請想像一下，如果你一名澳洲的穀物耕種農民，你住在西澳洲(Western Australia)並且擁有一個 1200公頃 (相當於 1237甲)的小麥
(以下數據為澳洲各省，平均每個農場的大小)
http://www.landcommodities.com/wp-content/uploads/2012/11/Comparison-of-cropping-farm-sizes-in-different-Australian-states-2011.gif http://www.landcommodities.com/variations-in-farm-size-across-the-australian-wheatbelt/#/
這種規模必須用 Center Pivot Irrigation System(下圖)才有辦法澆水達成。在栽種過程中不可避免，需要幫植物澆水，但出動一次這種大機具，不是便宜簡單事情。
http://il8.picdn.net/shutterstock/videos/17919412/thumb/11.jpg
因此 事先大概知道什麼時候這大片田地上的穀物，缺水需要澆灌，就變成非常重要的問題。
Case2: 農業工程滴灌系統評估
場景轉換到溫室內，你是一名剛採購完一套滴灌系統的農人，你想知道這套系統澆水後，如何決定滴灌出水點、澆水速率，使果樹吸收到足夠的水分？更何況各種不同的土壤材質，對於水分擴散的模式不盡相同，如何知道澆水後的結果？
http://www.trickle-l.com/new/gallery/soilpat.gif
此時就需要土壤濕度的模擬，可以快速驗證出土壤濕度擴散的現象，決定如何配置澆水位置以及澆水速率
http://www.scielo.br/img/revistas/sa/v67n1/v67n01a02fig06.gif
工具類型 必須要先打一個預防針，自然環境是一個極為複雜的系統，植物也是非常複雜生命體，要完全模擬出一樣的系統，是不可能的。
但這不代表simulation對於農業完全沒有幫助
Software Simulation Tools 主要分成兩類，各自有不同用途 (我自己分類的) Macroscope: Full Environment System Rough Behavior Simulation (交互作用) Microscope: Detail Simulation of Specific Component (精細模擬)</description>
    </item>
    
    <item>
      <title>生活雜筆</title>
      <link>https://ykhorzon.github.io/tw/2017/03/25/%E7%94%9F%E6%B4%BB%E9%9B%9C%E7%AD%86/</link>
      <pubDate>Sat, 25 Mar 2017 00:20:17 +0000</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/03/25/%E7%94%9F%E6%B4%BB%E9%9B%9C%E7%AD%86/</guid>
      <description>  生命記憶的拼圖雕塑，永遠向前，無法回頭
 從這篇文章得到  對我生命有啟發性的事件，與其省思  目錄 在有限的生命中，思考如何作決定 富足與貧窮 這個故事啟發自一串討論，&amp;raquo;吃飯會等別人到期，才一起開動的人，比較容易成功&amp;raquo;，年輕一輩的人都是為，等人是同理心、體貼的表現，因此留下好像給他人。其他長輩有不同的看法
偏頗不公是關係裂縫根源 我是家族中年紀最輕的晚輩，到了最近才知道親戚長輩有許多不愉快的往事，造成現在之間有嫌隙。探究之後發現，問題都來在同一個原因，都是對人有不公、偏袒等行為，間接造成仇恨。因此，我希望自己在未來人生中，處理人事務盡力諸求公平、平等，以此經驗為借鏡，避免發生。
困境試金石 人通常在艱難的時候，會產現出平時無法看到一面，可能是
生命的寶藏 - 正直 </description>
    </item>
    
    <item>
      <title>學術英文寫作-主軸與架構</title>
      <link>https://ykhorzon.github.io/tw/2017/03/22/%E5%AD%B8%E8%A1%93%E8%8B%B1%E6%96%87%E5%AF%AB%E4%BD%9C-%E4%B8%BB%E8%BB%B8%E8%88%87%E6%9E%B6%E6%A7%8B/</link>
      <pubDate>Wed, 22 Mar 2017 17:12:04 +0000</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/03/22/%E5%AD%B8%E8%A1%93%E8%8B%B1%E6%96%87%E5%AF%AB%E4%BD%9C-%E4%B8%BB%E8%BB%B8%E8%88%87%E6%9E%B6%E6%A7%8B/</guid>
      <description>主軸貫串全文，安排故事架構，邏輯連結論述
 從文章中可獲得  學術論文撰寫的核心 - 問題主軸 論文設計架構 實驗室前輩經驗  目錄 簡易流程  先思考論文 主軸思想(重點) 再從主軸為核心，發產出論文脈絡
 脈絡要求高度連貫性 可以 魚骨圖 、 心智圖 (mind mapping)嘗試組織(有序、結構化、定義關連性)，試試看從頭說故事，如果不暢通，打散重新組合，多嘗試直到story flow流暢  可參考標準論文架構 (設計故事架構)
 General to Specific (GS), Specific to General (SG) Intro. - Related Work - Main Body - Evaluation - Conclusion   開始前觀念提醒 解釋動機 文字論述並非流水帳，紀錄了時做的細節，而是解釋
 原因 動機 為什麼  抽象化的表達  複雜的現象，嘗試以抽象觀念，考慮使用代數、方程式把故事說清楚
 Anti-pattern
 一旦發現描述事務過於複雜，造成冗字過多，必須思考是否需使用抽象化，簡化描述複雜度。    訓練方式  離散數學證明練習 計算理論證明練習  主軸 問題主軸</description>
    </item>
    
    <item>
      <title>LeetCode磨練</title>
      <link>https://ykhorzon.github.io/tw/2017/03/10/leetcode%E7%A3%A8%E7%B7%B4/</link>
      <pubDate>Fri, 10 Mar 2017 15:55:23 +0000</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/03/10/leetcode%E7%A3%A8%E7%B7%B4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>英文學術寫作</title>
      <link>https://ykhorzon.github.io/tw/2017/03/10/%E8%8B%B1%E6%96%87%E5%AD%B8%E8%A1%93%E5%AF%AB%E4%BD%9C/</link>
      <pubDate>Fri, 10 Mar 2017 15:30:20 +0000</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/03/10/%E8%8B%B1%E6%96%87%E5%AD%B8%E8%A1%93%E5%AF%AB%E4%BD%9C/</guid>
      <description>  學術寫作要求嚴謹、精簡與精確
 目錄 系列文章 本系列文章會，將會以論文組成各區塊，分別探討寫作觀念。主要分成
 Introduction Related Work Methodology( Main Body ) Evaluation Conclusion Abstract  主要會統整我在學校上過的課程、課本、網路蒐集資訊，並且實際應用到我的碩士論文上，順便完成我的論文(?!)。本人並非英文專業人士，這些方法是我個人統整，並不具備有任何權威或研究支撐，使用前請三思，另外若錯誤歡迎指教，謝謝！
風格 A Fast Glance 目的 Taste Favor </description>
    </item>
    
    <item>
      <title>為何而寫</title>
      <link>https://ykhorzon.github.io/tw/2017/01/25/%E7%82%BA%E4%BD%95%E8%80%8C%E5%AF%AB/</link>
      <pubDate>Wed, 25 Jan 2017 14:22:04 +0000</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/01/25/%E7%82%BA%E4%BD%95%E8%80%8C%E5%AF%AB/</guid>
      <description>寫作即思考與反芻
  寫作，我思考我為何而寫、寫什麼東西、寫給誰 寫作，我審視我的撰寫的邏輯、用詞、句子與立場，發覺尚未被意識到的那個自己 寫作，思考問題是什麼？本質又是什麼？意義又是什麼？ 寫作帶動思考，述說故事刺激思考，為了產出而思考
 期許自己  思考即是武器，實作與說故事是技術，個性本質(好奇、自我要求)是驅動一切的引擎
 寫作規劃 目前計畫是每一週，撰寫一篇文章</description>
    </item>
    
    <item>
      <title>以始為終2017</title>
      <link>https://ykhorzon.github.io/tw/2017/01/24/%E4%BB%A5%E5%A7%8B%E7%82%BA%E7%B5%822017/</link>
      <pubDate>Tue, 24 Jan 2017 22:23:51 +0000</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2017/01/24/%E4%BB%A5%E5%A7%8B%E7%82%BA%E7%B5%822017/</guid>
      <description>以始為終  {% asset_img stuck.jpg %}
 卡住了，研究、思考、技術、吉他，生活中的種種似乎時常原地打轉 我意識到痛苦的解果，但我始終沒有積極面對它，我無從得知發生的原因 思考慣性的盲點、自覺得缺乏，讓重複的現象產生，總是讓結果與自我期待折磨內心
 與老師的對話 老師：YK，我發現你看起來很認真，做事也有調理，但是似乎常常卡在問題同一個地方，因此沒有進展。 我：是呀，我總是覺得沒有進展，我也很困擾
OS：我卡住似乎也不是第一次了
老師： 我猜可能的原因是你對這個OOO技術，最核心的概念沒有抓到重點。 我猜這也不單單發生在研究，你其他事情也有類似的現象吧？ 我：時常思考問題到最後，把自己搞的更亂。或者看更多資料，偏離主題。
OS：我靠，你怎麼知道，這讓我想起
老師： 我想只要你能在這方面有所突破，就算是人生一大突破，可以向前邁進 很多人有類似的問題，我覺得你可以回去好好想想原因。 腦子要靈活一點，許多的創新與突破，是把問題想清楚，看透問題的本質，找出適合的解決方法。
OS：我回去想想
與 octopus的對話 octopus是我重要的人，我時常與她討論生活中的種種。 今天也不例外，和老師的對話結束後，有感而發 容易發散，鑽入細節之中，一個問題尚未解決，就跑去解決下一個
與自己對話 我為什麼會卡住？ 自己觀察症狀  已經一段時間，和老師討論的研究沒有進展 我在學習音樂上 程式撰寫，一些project似乎沒有成功，或者是進度不順  需要一些實際案例與經驗 回歸根本：我對我自己了解嗎
自我分析： 原則  我不可能完全改變個性，成外另外一個人 但是 發揮自己的長處，補足那些缺點，達到一個自己可以 接受的平衡 也沒有一步到位的事情，凡是都有慢慢修正 一定會有挫折，無須沮喪，我相信可以變好 只要有客觀的檢視，確定再進步就好  習慣  生活習慣容易分心 愛嘗試新鮮挑戰，但是沒有有始有終 容易將注意力鎖定在細節結上，遺忘大局 先後次序、相依性、假設、重要性的安排  需要一些實際案例與經驗
調整  80%的事情使用蕃茄鐘，增進效率。類似敏捷開的sprint 以始為終 抓住這件事情的 原則(principle) 和 精神(Key)  心態  悲觀，不要被負面駕馭自己 逃避，將時間花在製造東西、休閒娛樂而不是思考解決與採取行動  需要一些實際案例與經驗</description>
    </item>
    
    <item>
      <title>TGDF 2016 Notes - Fail Fast</title>
      <link>https://ykhorzon.github.io/tw/2016/09/14/tgdf-2016-notes---fail-fast/</link>
      <pubDate>Wed, 14 Sep 2016 23:15:29 +0000</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2016/09/14/tgdf-2016-notes---fail-fast/</guid>
      <description>Fail Fast─為什麼閃退是好事 (Undone) Speaker: 雷亞 Co-founder 楊善詠
挑戰  技術人才培育 跨平台架構  事實上是救火雷亞
員工人數遽增 2011 , 16人 2016, &amp;gt;100人
死亡行軍：規格變更
Reference: SE系統工程師
種下惡因？ 效能問題？ 為了方便？用最簡單方式測試
BUG？ 自己的BUG自己修？那別人的呢？ 來自game engine 的問題
無法修正問題？ =&amp;gt; &amp;laquo;改變規格&amp;raquo;，讓玩家看不到
遊戲前端很難測試 可能的解法 避開錯誤（X） =&amp;gt; 盡可能提早發現錯誤 =&amp;gt; fail fast
簡單Example Defensive Programming 防禦性程式設計(避免software crash為目的）  接到 null 是正常的現象嗎？ 淺在造成bug，卻可能造成無法找出問題  ** NullPointerException ** Debug assert
Check input value ( use assertion too!) Add up the diagnosis info for future</description>
    </item>
    
    <item>
      <title>每日blog挑戰 Daily Blogging Challenge (epi.0)</title>
      <link>https://ykhorzon.github.io/tw/2016/09/10/%E6%AF%8F%E6%97%A5blog%E6%8C%91%E6%88%B0-daily-blogging-challenge-epi.0/</link>
      <pubDate>Sat, 10 Sep 2016 16:14:12 +0000</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/2016/09/10/%E6%AF%8F%E6%97%A5blog%E6%8C%91%E6%88%B0-daily-blogging-challenge-epi.0/</guid>
      <description>序：為什麼要此挑戰？Why to start this challenge? Record
 2016-09-10 16:14:12  啟發 受到我非常喜愛的 Youtuber, Casey Neistat 影響，常有人問他如何成為一位 成功的Youtuber ，他強而有力的回應是&amp;raquo;Keep uploading!&amp;laquo;，持續產出高質量的 vlog 或 video，挑戰自己的執行力、毅力、創意力的極限，這就是吸引群眾的不二法門。Casey表示:&amp;laquo;每天起床，我都在想我今天要拍什麼影片，(這樣的鍛鍊造就今天的我)&amp;laquo;。我以他作為自己的學習對象，將&amp;laquo;Keep producing valuable content !&amp;raquo;作為座右銘砥礪自己。
Reference Casey Nesistat Youtube Channel
每日動力 {% asset_img cycle.png %}
任何人每天一定有學習與收穫，但需藉由統整、紀錄才成將經驗轉為累積性的能量，否則船過水無痕，非常可惜。而撰寫blog文章促使(強迫)審視每一天的進度，觀察自己的行為，最重要的訓練組織知識和經驗。最終希望可以和人生長期計畫 (long-term plan)能夠互相呼應
自我行銷 Self-branding 在表面看似資訊自由的時代，事實上使被垃圾資訊與商業利益性資訊給蒙蔽的亂世(Facebook推薦廣告、Google 暗地追蹤)，俗話說亂世出英雄(喂～是這樣用嗎?!)，能夠產出具備組織性、系統性與具備知識意義的資訊，特別能夠脫引而出(Example:找到某大大的blog，又有一系列教學文章，根本撿到寶)
Reference photo source
如何進行與遊戲規則？How? 內容
 文章架構清晰 (組織圖可能用 coggle 或 xmind) 包含 Target Audience、 本篇目標 規劃未來維護與搜尋 具備完整性 (內容可以不多，必須包含觀念、看法與相關survey，不可為工具指令、單純抒發心情文章，可參考 ABCD 或尋找其他論述架構)
  方法
 Weekly Review 請別人給予回饋，說明優點、缺點和許願池 ( 持續改進 )  細節與堅持</description>
    </item>
    
    <item>
      <title>Software Simulation Tools for Agriculture</title>
      <link>https://ykhorzon.github.io/tw/1/01/01/software-simulation-tools-for-agriculture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/tw/1/01/01/software-simulation-tools-for-agriculture/</guid>
      <description>Hackpad Version</description>
    </item>
    
  </channel>
</rss>