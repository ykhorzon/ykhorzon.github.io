<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Agile on </title>
    <link>https://ykhorzon.github.io/tags/agile/</link>
    <description>Recent content in Agile on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>ykhorizon@gmail.com (ykhorizon)</managingEditor>
    <webMaster>ykhorizon@gmail.com (ykhorizon)</webMaster>
    <copyright>(c) 20167 Copyright all reserved to ykhorizon</copyright>
    <lastBuildDate>Sun, 13 Aug 2017 15:42:18 +0800</lastBuildDate>
    
	<atom:link href="https://ykhorzon.github.io/tags/agile/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Full Stack DevOps Engineer?</title>
      <link>https://ykhorzon.github.io/agile/devops_experience/</link>
      <pubDate>Sun, 13 Aug 2017 15:42:18 +0800</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/agile/devops_experience/</guid>
      <description>Speaker
 Feng  Warnings
 The following content is sythesised with talkings and my experience  Photo of Event History Diverge and Converge The speaker shared about the evolution of software developing. If we looked back the history of software developing, all the requirement and architecture is simple. When complexity of application is increasing, developing team can not afford task of operations any more,such as loading balance and performance tuning.</description>
    </item>
    
    <item>
      <title>COSCUP Startup Culture Buliding Talk</title>
      <link>https://ykhorzon.github.io/agile/coscup-startup-culture-buliding-talk/</link>
      <pubDate>Mon, 12 Sep 2016 20:09:59 +0000</pubDate>
      <author>ykhorizon@gmail.com (ykhorizon)</author>
      <guid>https://ykhorzon.github.io/agile/coscup-startup-culture-buliding-talk/</guid>
      <description>人 環境(core) 文化(core) 方法 工具  How to Open?
###工廠 vs 創意 - product-driven - customer-driven
敏捷的文化 增進彼此之間的溝通
多一點&amp;raquo;引導&amp;raquo;，少一點&amp;raquo;管理&amp;raquo; 用團隊取代英雄
管理：高階領導，如何在讓每一個在環境中發揮實力
scrum kanban water-fall
PM為溝通的角色
###溝通 應用對方可以理解的話語，把訊息傳達進去 如何建立人與人的連結？ 持之以行的舉辦 - 讓彼此知道彼此
###如何提升資訊透明度
目標清楚 - 過程 - 成果; - 成果狀態; 白板
工作有效 - Jenkins</description>
    </item>
    
  </channel>
</rss>