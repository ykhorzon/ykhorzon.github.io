<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Agile on Ykhorizon</title>
    <link>https://ykhorzon.github.io/categories/agile/</link>
    <description>Recent content in Agile on Ykhorizon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Oct 2018 11:54:01 +0800</lastBuildDate>
    
	<atom:link href="https://ykhorzon.github.io/categories/agile/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Organization design is a choose from systems thinking aspect</title>
      <link>https://ykhorzon.github.io/2018/10/organization-design-is-a-choose-from-systems-thinking-aspect/</link>
      <pubDate>Fri, 26 Oct 2018 11:54:01 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/2018/10/organization-design-is-a-choose-from-systems-thinking-aspect/</guid>
      <description>Notice
 If your team is less than 10 people, the major factor of team is most about individual ability and skill instead of designing organization. However, when you are in a large team (&amp;gt;30 or more), organization design play a critical role to efficiency.
 Viewpoint
  From a viewpoint of new gradated student(me), I summarized few points which impressed me.   1. All about objectives  Every design(specifically means organization) should sets clear main objective and secondary objective.</description>
    </item>
    
    <item>
      <title>Full Stack DevOps Engineer?</title>
      <link>https://ykhorzon.github.io/2017/08/full-stack-devops-engineer/</link>
      <pubDate>Sun, 13 Aug 2017 15:42:18 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/2017/08/full-stack-devops-engineer/</guid>
      <description>Speaker
 Feng  Warnings
 The following content is sythesised with talkings and my experience  Photo of Event History Diverge and Converge The speaker shared about the evolution of software developing. If we looked back the history of software developing, all the requirement and architecture is simple. When complexity of application is increasing, developing team can not afford task of operations any more,such as loading balance and performance tuning.</description>
    </item>
    
  </channel>
</rss>